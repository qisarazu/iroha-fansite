// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Video {
  id                  String          @id @default(uuid())
  videoId             String
  title               String
  duration            Int
  thumbnailDefaultUrl String
  thumbnailMediumUrl  String
  thumbnailHighUrl    String
  publishedAt         DateTime
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  SingingStream       SingingStream[]
}

model Song {
  id            String          @id @default(uuid())
  title         String
  artist        String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  SingingStream SingingStream[]
}

model SingingStream {
  id        String         @id @default(uuid())
  start     Int
  end       Int
  video     Video          @relation(fields: [videoId], references: [id])
  videoId   String
  song      Song           @relation(fields: [songId], references: [id])
  songId    String
  playlists PlaylistItem[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model PlaylistItem {
  id         String        @id @default(nanoid(12))
  position   Int
  playlist   Playlist      @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  playlistId String
  music      SingingStream @relation(fields: [musicId], references: [id])
  musicId    String
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  @@unique([playlistId, musicId])
}

model Playlist {
  id            String         @id @default(nanoid(12))
  title         String
  description   String?
  thumbnailURLs String[]       @default([])
  items         PlaylistItem[]
  ownerId       String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Activity {
  id           String         @id @default(nanoid(12))
  status       ActivityStatus
  type         ActivityType
  title        String
  thumbnailURL String
  detailURL    String
  isShowTime   Boolean
  startAt      DateTime
  endAt        DateTime?
  endNote      String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

enum ActivityType {
  GOODS
  EVENT
}

enum ActivityStatus {
  ACTIVE
  HIDDEN
  SCHEDULED
  CLOSED
}
